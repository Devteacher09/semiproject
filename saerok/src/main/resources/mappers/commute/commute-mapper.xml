<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="commute">

   <resultMap id="commuteMap" type="commute">
      <id property="commuteNo" column="COMMUTE_NO" />
      <result property="inDtime" column="IN_DTIME" />
      <result property="outDtime" column="OUT_DTIME" />
      <result property="inTime" column="IN_TIME" />
      <result property="outTime" column="OUT_TIME" />
      <result property="lateYN" column="LATE_YN" />
      <result property="status" column="STATUS" />
      <result property="overtime" column="OVERTIME" />
      <result property="workingDay" column="WORKINGDAY" />
      <result property="empNo" column="EMP_NO" />

   </resultMap>


<!--    <resultMap type="emp" id="empMap">
      <id column="EMP_NO" property="empNo" />
      <result column="EMP_PW" property="empPw" />
      <result column="EMP_NAME" property="empName" />
      <result column="EMP_PHONE" property="empPhone" />
      <result column="EMP_EMAIL" property="empEmail" />
      <result column="EMP_ADDR" property="empAddr" />
      <result column="EMP_DETAIL_ADDR" property="empDetailAddr" />
      <result column="EMP_DATE" property="empDate" />
      <result column="WORK_YN" property="workYn" />
      <result column="ORI_FILENAME" property="oriFileName" />
      <result column="DEST_FILENAME" property="destFileName" />
      <result column="ISSUE_ANNU" property="issueAnnu" />
      <result column="USE_ANNU" property="useAnnu" />
      <result column="DEPT_CODE" property="deptCode" />
      <result column="DEPT_NAME" property="deptName" />
      <result column="JOB_CODE" property="jobCode" />
      <result column="JOB_NAME" property="jobName" />
   </resultMap> -->
   
<!--    <select id="selectCommuteList" parameterType="map"
      resultMap="commuteMap">
      SELECT * FROM COMMUTE WHERE EMP_NO=#{empNo}AND
      TRUNC(WORKINGDAY)=TO_DATE(#{time},'yy-')
   </select> -->  
 <select id="selectCommuteList" parameterType="map" resultMap="commuteMap">
    SELECT *
    FROM COMMUTE
    WHERE EMP_NO = #{empNo}
      AND TO_DATE(WORKINGDAY,'YY-MM-DD') = TO_DATE(#{time}, 'YY-MM-DD')
</select>

   <select id="selectCommuteWorkList" parameterType="map"
      resultMap="commuteMap">
      SELECT min(IN_DTIME) as in_dtime
      , max(OUT_DTIME) as out_dtime
      FROM COMMUTE
      WHERE EMP_NO = #{empNo}
      AND TRUNC(WORKINGDAY)=TO_DATE(#{time},'YY-MM-DD')
   </select>

   <select id="selectExsistWorkInList" parameterType="map"
      resultMap="commuteMap">
      SELECT * FROM COMMUTE WHERE EMP_NO=#{empNo}AND
      TRUNC(WORKINGDAY)=TO_DATE(#{time},'YY-MM-DD')
      AND IN_DTIME IS NOT NULL
   </select>

<!--    <select id="selectCommute" parameterType="String"
      resultMap="commuteMap">
      SELECT
      COMMUTE_NO,
      EMP_NO,
      WORKINGDAY,
      SUBSTR(IN_DTIME, 11,
      LENGTH(IN_DTIME)) IN_TIME,
      SUBSTR(OUT_DTIME, 11, LENGTH(OUT_DTIME))
      OUT_TIME
      FROM
      COMMUTE
      WHERE EMP_NO = #{empNo} AND TO_CHAR(WORKINGDAY,
      'RR/MM/DD') = TO_CHAR(CURRENT_DATE, 'RR/MM/DD')
   </select>

   <insert id="insertCommute" parameterType="String">
      INSERT INTO COMMUTE
      (COMMUTE_NO, EMP_NO, WORKINGDAY, IN_DTIME)
      VALUES
      ('C'||#{empNo}||'-'||TO_CHAR(CURRENT_DATE, 'yyyyMMdd'), #{empNo},
      SYSDATE, TO_CHAR(CURRENT_TIMESTAMP, 'yyyy-MM-dd HH24:MI:SS'))
   </insert> -->

   <!-- <insert id="insertCommuteStatus" parameterType="map"> INSERT INTO COMMUTE 
      (commute_no, IN_DTIME,STATUS, EMP_NO,WORKINGDAY) VALUES (commute_SEQ.NEXTVAL, 
      TO_CHAR(CURRENT_TIMESTAMP, 'yyyy-MM-dd HH24:MI:SS'),#{status},#{empNo} ,TO_CHAR(SYSDATE,'YYYY-MM-DD')) 
      <selectKey keyProperty="indtime" resultType="date"> SELECT IN_DTIME FROM 
      COMMUTE WHERE EMP_NO = #{empNo} AND TO_CHAR(SYSDATE,'YYYY-MM-DD') =TO_CHAR(WORKINGDAY,'YYYY-MM-DD') 
      </selectKey> </insert> -->
   <!-- <insert id="insertCommuteStatus" parameterType="map"> INSERT INTO COMMUTE 
      (commute_no, IN_DTIME, STATUS, EMP_NO, WORKINGDAY) VALUES (commute_SEQ.NEXTVAL, 
      CURRENT_TIMESTAMP, #{status}, #{empNo}, SYSDATE) <selectKey keyProperty="indtime" 
      resultType="date"> SELECT IN_DTIME FROM COMMUTE WHERE EMP_NO = #{empNo} AND 
      WORKINGDAY = SYSDATE </selectKey> </insert> -->
   <insert id="insertCommuteStatus" parameterType="map">
      insert into
      commute
      values(
      commute_SEQ.NEXTVAL,
      sysdate,
      null,
      null,
      '10',
      0,
      default,
      #{empNo},
      0
      )
   </insert>

   <update id="updateCommuteEndTime" parameterType="map">
      UPDATE COMMUTE
      SET
      OUT_DTIME = TO_CHAR(SYSTIMESTAMP, 'yyyy-MM-dd HH24:MI:SS'),
      STATUS=#{status}
      WHERE EMP_NO = #{empNo} AND
      TO_CHAR(SYSDATE,'YYYY-MM-DD')
      =TO_CHAR(WORKINGDAY,'YYYY-MM-DD') AND
      OUT_DTIME IS NULL
      <selectKey keyProperty="outdtime" resultType="date">
         SELECT
         OUT_DTIME FROM COMMUTE
         WHERE EMP_NO = #{empNo} AND
         TO_CHAR(SYSDATE,'YYYY-MM-DD')
         =TO_CHAR(WORKINGDAY,'YYYY-MM-DD')
      </selectKey>
   </update> 
<!-- <update id="updateCommuteEndTime" parameterType="map">
    UPDATE commute
    SET out_Dtime = FROM_TZ(TO_TIMESTAMP(SYSTIMESTAMP, 'YYYY-MM-DD HH24:MI:SS.FF3'), 'Asia/Seoul'),
        status = '업무종료' 
    WHERE emp_no = #{empNo} AND TRUNC(workingDay) = TO_DATE(#{time}, 'YYYY-MM-DD')
</update> -->

<update id="updateStartWork" parameterType="map">
      update
      commute
      set
      in_Dtime = null
      where
      emp_No = #{empNo}
      and TRUNC(workingDay) = TO_DATE(#{time},'YY-MM-DD')
   </update>
<!-- 
   <update id="updateStartWork" parameterType="map">
    UPDATE COMMUTE
    SET IN_DTIME = NULL
    WHERE EMP_NO = #{empNo}
      AND TRUNC(WORKINGDAY) = TO_DATE(#{time}, 'YY-MM-DD')
</update> -->

<!-- 
   <select id="selectCommuteStatusList" parameterType="string"
      resultMap="commuteMap">
      SELECT
      A.COMMUTE_NO,
      A.IN_DTIME,
      A.OUT_DTIME,
      A.LATE_YN,
      A.STATUS,
      A.OVERTIME,
      A.WORKINGDAY,
      A.EMP_NO
      FROM
      COMMUTE A
      WHERE EMP_NO =
      #{empNo}
      ORDER BY WORKINGDAY;
   </select> -->

<update id="updateWorkTime" parameterType="map">
      UPDATE COMMUTE SET
      WORKINGHOURS =#{daytime}
      OVERTIME =#{overtime}
      WHERE EMP_NO=#{empNo} AND
      TRUNC(WORKINGDAY)=TO_DATE(#{time},'YY-MM-DD')
   </update> 
<!--    <update id="updateWorkTime" parameterType="map">
    UPDATE COMMUTE
    SET WORKINGHOURS = #{daytime},
        OVERTIME = #{overtime}
    WHERE EMP_NO = #{empNo}
      AND TRUNC(WORKINGDAY) = TO_DATE(#{time}, 'YY-MM-DD')
</update> -->

   <update id="updateHalfDayOff" parameterType="map">
      update commute
      set
      workingHours =
      <choose><!-- 만약 근무시간 + 4시간이 8시간보다 크면 연장시간을 추가 -->
         <when test="daytime + 14400000 > 28800000">28800000</when>
         <otherwise>#{daytime + 14400000}</otherwise>
      </choose>
      ,
      overtime =
      <choose>
         <when test="daytime + 14400000 > 28800000">#{daytime + 14400000 - 28800000}</when>
         <otherwise>#{overtime}</otherwise>
      </choose>
      where
      emp_no = #{empNo} AND TRUNC(workingDay) = TO_DATE(#{time},'YY-MM-DD')
   </update>


   <select id="selectMonthWork" parameterType="map"
      resultMap="commuteMap">
      SELECT * FROM COMMUTE WHERE WORKINGDAY LIKE '%' || #{date}
      || '%' AND
      EMP_NO=#{empNo}
   </select>

   <select id="selectWeekWorkTime" parameterType="map"
      resultType="_int">
      SELECT NVL(SUM(workingHours), 0)
      FROM commute
      WHERE emp_No = #{empNo}
      AND workingDay BETWEEN TO_DATE(#{start}, 'YYYY-MM-DD') AND
      TO_DATE(#{end}, 'YYYY-MM-DD')
   </select>
   <!-- <select id="selectWeekWorkTime" parameterType="map" resultType="_int"> 
      select nvl(sum(workingHours), 0) as 해당기간근무시간 from commute where emp_no = 
      #{empNo} and workingDay between #{start} and #{end} + interval '1' DAY </select> -->

   <!-- <select id="selectWeekOverTime" parameterType="map" resultMap="commuteMap"> 
      SELECT NVL(SUM(OVERTIME),0) FROM COMMUTE WHERE EMP_NO =#{empNo}AND WORKINGDAY 
      BETWEEN #{start} AND TO_DATE(#{end}) ORDER BY WORKINGDAY </select> -->
   <select id="selectWeekOverTime" parameterType="map"
      resultType="_int">
      SELECT NVL(SUM(OVERTIME), 0) AS TOTAL_OVERTIME
      FROM COMMUTE
      WHERE EMP_NO = #{empNo} AND WORKINGDAY BETWEEN #{start} AND #{end}
   </select>

   <select id="selectWeekDatas" parameterType="map"
      resultMap="commuteMap">
      SELECT *
      FROM COMMUTE WHERE EMP_NO=#{empNo}AND WORKINGDAY
      BETWEEN TO_DATE(#{start},'YY-MM-DD') AND TO_DATE(#{end},'YY-MM-DD')+1 ORDER BY WORKINGDAY
   </select>

   <select id="weekTotalTime" parameterType="map" resultType="_int">
      SELECT NVL(SUM(workingHours),0)
      FROM commute
      WHERE emp_no = #{empNo}
      AND workingDay BETWEEN #{start} AND TO_DATE(#{end},'YY-MM-DD') + 1
   </select>
   <select id="totalMonthTime" parameterType="map"
      resultType="_int">
      SELECT NVL(SUM(workingHours),0) FROM COMMUTE WHERE WORKINGDAY LIKE '%'
      || #{monthTime} || '%' AND EMP_NO=#{empNo}
   </select>
   <select id="monthOverTime" parameterType="map" resultType="_int">
      SELECT NVL(SUM(OVERTIME), 0)
      FROM COMMUTE
      WHERE TO_CHAR(WORKINGDAY, 'YYYY-MM') = #{monthTime}
      AND EMP_NO = #{empNO}
   </select>

   
<!-- <select id="selectEmpDeptList" parameterType="map" resultType="string">
   SELECT
   EMP_NO, EMP_NAME,(SELECT JOB_NAME FROM EMPLOYEE WHERE E.JOB_CODE=JOB_CODE)AS JOB_NAME,
   (SELECT DEPT_NAME FROM EMPLOYEE WHERE E.DEPT_CODE=DEPT_CODE)AS DEPT_NAME,
   (SELECT DEST_FILENAME FROM EMPLOYEE WHERE PK_NO = E.EMP_NO) AS DESTFILENAME 
   FROM EMP E WHERE(E.WORK_YN='N' OR EMP_DATE>=(TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD HH:24:MI:SS'),
   'YYYY-MM-DD HH24:MI:SS'))
   )AND E.DEPT_CODE=#{deptCode}
   ORDER BY E.JOB_CODE
</select>
  
    
    <select id="empFinderDeptList" resultMap="empMap">
    SELECT 
        e.*,
        j.job_name,
        d.dept_name,
        (SELECT dest_filename FROM employee WHERE pk_no = e.emp_no) destFilename
    FROM 
        emp e 
        JOIN dept d ON e.dept_code = d.dept_code
        JOIN job j ON e.job_code = j.job_code
    WHERE
        (
            work_yn = 'N'
            OR
            emp_date >= (TO_DATE_TZ(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AT TIME ZONE 'Asia/Seoul')
        )
        <if test="searchType == 'dept_name'">
            AND d.dept_name LIKE '%' || #{searchKeyword} || '%'
        </if>
        <if test="searchType == 'job_name'">
            AND j.job_name LIKE '%' || #{searchKeyword} || '%'
        </if>
        <if test="searchType == 'emp_name'">
            AND e.emp_name LIKE '%' || #{searchKeyword} || '%'
        </if>
        <if test="deptCode != null">
            AND e.dept_code = #{deptCode}
        </if>
    ORDER BY
        e.dept_code, e.job_code
</select>
     -->

</mapper>

