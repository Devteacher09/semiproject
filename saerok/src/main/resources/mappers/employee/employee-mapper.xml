<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
   <!-- 지혜 -->
   <mapper namespace="emp">
      <resultMap type="emp" id="empMap">
           <id column="EMP_NO" property="empNo"/>
           <result column="EMP_PW" property="empPw"/>
           <result column="EMP_NAME" property="empName"/>
           <result column="EMP_PHONE" property="empPhone"/>
           <result column="EMP_EMAIL" property="empEmail"/>
           <result column="EMP_ADDR" property="empAddr"/>
           <result column="EMP_DETAIL_ADDR" property="empDetailAddr"/>
           <result column="EMP_DATE" property="empDate"/>
           <result column="WORK_YN" property="workYn"/>
           <result column="ORI_FILENAME" property="oriFileName"/>
           <result column="DEST_FILENAME" property="destFileName"/>
           <result column="ISSUE_ANNU" property="issueAnnu"/>
           <result column="USE_ANNU" property="useAnnu"/>
           <result column="DEPT_CODE" property="deptCode"/>
           <result column="DEPT_NAME" property="deptName"/>
           <result column="JOB_CODE" property="jobCode"/>
           <result column="JOB_NAME" property="jobName"/>
     </resultMap>
  
   <!-- 로그인 mapper -->
     <select id="selectEmployeeByEmpNo" parameterType="string" resultMap="empMap">
        SELECT * FROM EMPLOYEE EMPLOYEE JOIN DEPARTMENT USING (DEPT_CODE)
        JOIN ATO_JOB USING (JOB_CODE) WHERE EMP_NO=#{empNo}
     </select>
   
   <!-- 마이페이지 수정 mapper -->
      <update id="updateMyPage" parameterType="emp" > 
      UPDATE EMPLOYEE 
         SET EMP_NAME=#{empName}
           , EMP_PHONE=#{empPhone}
           , EMP_EMAIL=#{empEmail}
           , EMP_ADDR=#{empAddr}
           , EMP_DETAIL_ADDR=#{empDetailAddr} 
           <if test="oriFileName != null and destFileName !=null">
           , ORI_FILENAME=#{oriFileName}
           , DEST_FILENAME=#{destFileName}
           </if>
           , EMP_DATE=(select emp_date from employee where EMP_NO=#{empNo})
        WHERE EMP_NO=#{empNo}
      </update>
   
   <!-- 사원등록 mapper -->
      <insert id="insertEmployeeEnd" parameterType="map">
          INSERT INTO EMPLOYEE 
          VALUES (
              'ATO_'||SEQ_EMP_NO.NEXTVAL,
              #{deptCode},
              #{jobCode},
              #{empPw},
              #{empName},
              #{empPhone},
              #{empEmail},
              null,
              null,
              sysdate,
              'Y',
              #{oriFileName.originalFilename},
              <!-- #{oriFileName}, -->
              #{destFileName},
              #{issueAnnu},
              null
          )
      </insert>
   
   <!-- 전체사원조회 mapper -->
      <select id="selectEmployeeList" resultMap="empMap">
          SELECT *
          FROM EMPLOYEE
          JOIN DEPARTMENT USING(dept_code) 
          JOIN ATO_JOB USING(job_code) 
          ORDER BY DEPT_NAME ASC, JOB_CODE ASC, EMP_NO ASC
      </select>
   
 <!-- 사원수정 -->
      <update id="updateEmployee" parameterType="emp">
          UPDATE EMPLOYEE 
          SET 
              DEPT_CODE=#{deptCode},
              JOB_CODE=#{jobCode},
              WORK_YN=#{workYn}
          WHERE EMP_NO=#{empNo}
      </update>

<!-- 사원 삭제 -->
      <delete id="deleteEmployee" parameterType="emp">
         DELETE EMPLOYEE WHERE EMP_NO=#{empNo}
      </delete>
      
<!--       <select id="selectEmpDeptList" parameterType="map" resultType="string">
   SELECT
   EMP_NO, EMP_NAME,(SELECT JOB_NAME FROM EMPLOYEE WHERE E.JOB_CODE=JOB_CODE)AS JOB_NAME,
   (SELECT DEPT_NAME FROM EMPLOYEE WHERE E.DEPT_CODE=DEPT_CODE)AS DEPT_NAME,
   (SELECT DEST_FILENAME FROM EMPLOYEE WHERE PK_NO = E.EMP_NO) AS DESTFILENAME 
   FROM EMP E WHERE(E.WORK_YN='N' OR EMP_DATE>=(TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD HH:24:MI:SS'),
   'YYYY-MM-DD HH24:MI:SS'))
   )AND E.DEPT_CODE=#{deptCode}
   ORDER BY E.JOB_CODE
</select> -->
  <select id="selectEmpDeptList" parameterType="map" resultType="string">
    SELECT
        EMP_NO,
        EMP_NAME,
        (SELECT JOB_NAME FROM EMPLOYEE WHERE EMP_CODE = E.JOB_CODE) AS JOB_NAME,
        (SELECT DEPT_NAME FROM EMPLOYEE WHERE EMP_CODE = E.DEPT_CODE) AS DEPT_NAME,
        (SELECT DEST_FILENAME FROM EMPLOYEE WHERE PK_NO = E.EMP_NO) AS DESTFILENAME
    FROM EMP E
    WHERE
        (E.WORK_YN = 'N' OR E.EMP_DATE >= (TO_DATE(TO_CHAR(SYSDATE, 'YY-MM-DD HH24:MI:SS'), 'YY-MM-DD HH24:MI:SS')))
        AND E.DEPT_CODE = #{deptCode}
    ORDER BY E.JOB_CODE
</select>
  
  
<!-- <select id="empFinderDeptList" resultMap="empMap">
    SELECT 
        e.*,
        j.job_name,
        d.dept_name,
        (SELECT dest_filename FROM employee WHERE pk_no = e.emp_no) destFilename
    FROM 
        emp e 
        JOIN dept d ON e.dept_code = d.dept_code
        JOIN job j ON e.job_code = j.job_code
    WHERE
        (
            work_yn = 'N'
            OR
            emp_date >= (TO_DATE_TZ(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AT TIME ZONE 'Asia/Seoul')
        )
        <if test="searchType == 'dept_name'">
            AND d.dept_name LIKE '%' || #{searchKeyword} || '%'
        </if>
        <if test="searchType == 'job_name'">
            AND j.job_name LIKE '%' || #{searchKeyword} || '%'
        </if>
        <if test="searchType == 'emp_name'">
            AND e.emp_name LIKE '%' || #{searchKeyword} || '%'
        </if>
        <if test="deptCode != null">
            AND e.dept_code = #{deptCode}
        </if>
    ORDER BY
        e.dept_code, e.job_code
</select> -->
<select id="empFinderDeptList" resultMap="empMap" parameterType="map">
    SELECT 
        EMPLOYEE,
        JOB_NAME,
        DEPT_NAME,
        (SELECT dest_filename FROM employee WHERE pk_no = e.emp_no) AS destFilename
    FROM 
        emp e 
        JOIN dept d ON e.dept_code = d.dept_code
        JOIN job j ON e.job_code = j.job_code
    WHERE
        (
            e.work_yn = 'N'
            OR
            e.emp_date >= (TO_DATE_TZ(TO_CHAR(SYSDATE, 'YY-MM-DD HH24:MI:SS'), 'YY-MM-DD HH24:MI:SS') AT TIME ZONE 'Asia/Seoul')
        )
        AND (
            CASE 
                WHEN #{searchType} = 'dept_name' THEN d.dept_name LIKE '%' || #{searchKeyword} || '%'
                WHEN #{searchType} = 'job_name' THEN j.job_name LIKE '%' || #{searchKeyword} || '%'
                WHEN #{searchType} = 'emp_name' THEN e.emp_name LIKE '%' || #{searchKeyword} || '%'
                ELSE 1 = 1 
            END
        )
        AND (
            CASE 
                WHEN #{deptCode} IS NOT NULL THEN e.dept_code = #{deptCode}
                ELSE 1 = 1 
            END
        )
    ORDER BY
        e.dept_code, e.job_code
</select>


</mapper>